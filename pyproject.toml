[tool.poetry]
name = "python-sample-project"
version = "0.1.0"
description = "python-sample-project"
authors = ["Sioux <codemaxi@163.com>"]
readme = "README.md"
license="MIT"
repository = "https://github.com/codemaxi520/python-sample-project.git"
documentation = "https://github.com/codemaxi520/python-sample-project/blob/master/README.md"
packages = [{include = "root_package_name"}]

[tool.poetry.dependencies]
python = "^3.10"
python-dotenv = "^1.0.1"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
mypy = "^1.10.0"
ruff = "^0.4.3"
coverage = "^7.5.1"
black = "^24.4.2"

[[tool.poetry.source]]
name = "tsinghua"
url = "https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple/"
priority = "primary"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
lint.ignore = ["B008", "RUF012"]
line-length = 100
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q",   # flake8-quotes
    "UP",  # pyupgrade
    "PT",  # flake8-pytest-style
    "RUF", # Ruff-specific rules
]

[tool.ruff.lint.isort]
known-third-party = []

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
strict = true
check_untyped_defs = false
explicit_package_bases = true
warn_unused_ignores = false
exclude = ["tests"]